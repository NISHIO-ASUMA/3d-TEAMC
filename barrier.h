//==============================================================================================================
//
// バリア [barrier.h]
// Author:YOSHIDA YUUTO
//
//==============================================================================================================

#ifndef BARRIER_H_
#define BARRIER_H_

//**************************************************************************************************************
//インクルードファイル
//**************************************************************************************************************
#include"main.h"

//**************************************************************************************************************
// マクロ定義
//**************************************************************************************************************
#define MAX_BARRIER (8)		 // バリアの最大数

//**************************************************************************************************************
// 壁の構造体
//**************************************************************************************************************
typedef struct
{
	D3DXVECTOR3 pos;		// 位置
	D3DXVECTOR3 vtxMax;		// 最大の頂点
	D3DXVECTOR3 vtxMin;		// 最小の頂点
	D3DXVECTOR3 Size;		// 大きさ
	bool bUse;				// 使用状態
}Barrier;

//**************************************************************************************************************
// プロトタイプ宣言
//**************************************************************************************************************
void InitBarrier(void);   // バリアの初期化処理
void SetBarrier(D3DXVECTOR3 pos, D3DXVECTOR3 vtxMax, D3DXVECTOR3 vtxMin); // バリアの設定処理
void CollisionBarrier(D3DXVECTOR3* pPos, D3DXVECTOR3* pPosOld, D3DXVECTOR3* pMove,D3DXVECTOR3 *pSize); // バリアの判定処理
#endif