//==============================================================================================================
//
// カウント [count.h]
// Author: YOSHIDA YUTO
//
//==============================================================================================================
#ifndef _COUNT_H_
#define _COUNT_H_

//**************************************************************************************************************
// インクルードファイル
//**************************************************************************************************************
#include"main.h"

//**************************************************************************************************************
// マクロ定義
//**************************************************************************************************************
#define NUM_DIGIT (2) // カウンターの分と秒

//**************************************************************************************************************
// カウントのテクスチャの種類
//**************************************************************************************************************
typedef enum
{
	COUNTERTEXTURE_COLON = 0,
	COUNTERTEXTURE_NUMBER,
	COUNTERTEXTURE_MAX
}COUNTERTEXTURE;

//**************************************************************************************************************
// カウントのテクスチャのファイルパス
//**************************************************************************************************************
static const char* COUNTER_TEXTURE[COUNTERTEXTURE_MAX] =
{
	"data\\TEXTURE\\timer_circle.png",
	"data\\TEXTURE\\time002.png",
};

//**************************************************************************************************************
// カウントの種類
//**************************************************************************************************************
typedef enum
{
	COUNTER_COUNTDOWN = 0,
	COUNTER_COUNTUP,
	COUNTER_MAX
}COUNTER;

//**************************************************************************************************************
// カウントの種類
//**************************************************************************************************************
typedef enum
{
	COUNTERTYPE_EVENTTIMER = 0,
	COUNTERTYPE_MAX
}COUNTERTYPE;

//**************************************************************************************************************
// カウントの構造体
//**************************************************************************************************************
typedef struct
{
	D3DXVECTOR3 pos;	  // 位置
	int nCountType;			  // 種類
	int nMinute, nSecond; // 分、秒
	bool bUse;			  // 使用状態
	float fWidth, fHeight; // 横幅、縦幅
	LPDIRECT3DVERTEXBUFFER9 g_pVtxBuffCounter[NUM_DIGIT];//頂点バッファへのポインタ
	float fPosTexU[NUM_DIGIT]; // テクスチャの座標
	int TimerCnt;             // タイマーのカウント
	int nType;
}Counter;

//**************************************************************************************************************
// プロトタイプ宣言
//**************************************************************************************************************
void InitCounter(void);   // カウントの初期化処理
void UninitCounter(void); // カウントの終了処理
void UpdateCounter(void); // カウントの更新処理
void DrawCounter(void);   // カウントの描画処理
void SetCounter(D3DXVECTOR3 pos,int nCountType,int nTime,float fWidth,float fHeight,int nType); // カウントの設定処理
#endif