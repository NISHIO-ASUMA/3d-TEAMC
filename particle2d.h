//===================================================================================================================
//
// パーティクル2d [particle2d.h]
// Author:YOSHIDA YUUTO
//
//===================================================================================================================

#ifndef _PARTICLE2D_H_  
#define _PARTICLE2D_H_

//**************************************************************************************************************
// インクルードファイル
//**************************************************************************************************************
#include"main.h"

//**************************************************************************************************************
// パーティクルの種類
//**************************************************************************************************************
typedef enum
{
	PARTICLE2D_NORMAL = 0,
	PARTICLE2D_ICON,
	PARTICLE2D_CRAFT,
	PARTICLE2D_SPMODE,
	PARTICLE2D_MAX
}PARTICLE2D;

//**************************************************************************************************************
// パーティクル2D構造体
//**************************************************************************************************************
typedef struct
{
	D3DXVECTOR3 pos;	// 位置(発生位置)
	D3DXCOLOR col;		// 色
	D3DXVECTOR3 move;	// 移動量
	float fHeight;		// 高さ
	float fWidth;		// 横幅
	float fRadius;		// 半径
	int nType;			// 種類
	int nLife;			// 寿命(発生時間)
	bool bUse;			// 使用しているかどうか
	int nNumParticle;	// 粒子の数
	D3DXVECTOR3 dir;	// 移動方向
	D3DXVECTOR3 speed;	// 移動速度
}Particle2D;

//**************************************************************************************************************
// プロトタイプ宣言
//**************************************************************************************************************
void InitParticle2D(void);		// パーティクル2Dの初期化処理
void UninitParticle2D(void);	// パーティクル2Dの終了処理
void UpdateParticle2D(void);	// パーティクル2Dの更新処理
void DrawParticle2D(void);		// パーティクル2Dの描画処理
void SetParticle2D(D3DXVECTOR3 pos,D3DXVECTOR3 speed, int nLife, D3DXCOLOR col, float fRadius, int nType, int nNumParticle); // パーティクル2Dの設定処理
Particle2D* GetParticle2D(void); // パーティクルの取得
#endif

