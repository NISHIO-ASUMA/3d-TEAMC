//==============================================================================================================
//
// アイテムのゲージ [itemgage.cpp]
// Author: YOSHIDA YUTO
//
//==============================================================================================================
#include "itemgage.h"

//**************************************************************************************************************
//グローバル変数
//**************************************************************************************************************
LPDIRECT3DTEXTURE9 g_pTextureItemGage = NULL;		// テクスチャへのポインタ
LPDIRECT3DVERTEXBUFFER9 g_pVtxBuffItemGage = NULL;// 頂点バッファへのポインタ
ItemGage g_ItemGage; // アイテムゲージの情報

//==============================================================================================================
// アイテムのゲージの初期化処理
//==============================================================================================================
void InitItemGage(void)
{
	// デバイスの取得
	LPDIRECT3DDEVICE9 pDevice = GetDevice();

	// 頂点情報のポインタ
	VERTEX_2D* pVtx;

	//// テクスチャの読み込み
	//D3DXCreateTextureFromFile(pDevice,
	//	Texturename,
	//	&g_pTextureResult);

	//// 頂点バッファの生成・頂点情報の設定
	//pDevice->CreateVertexBuffer(sizeof(VERTEX_2D) * 4,
	//	D3DUSAGE_WRITEONLY,
	//	FVF_VERTEX_2D,
	//	D3DPOOL_MANAGED,
	//	&g_pVtxBuffResult,
	//	NULL);

	//// 頂点バッファのロック
	//g_pVtxBuffResult->Lock(0, 0, (void**)&pVtx, 0);

	//// 頂点座標の設定
	//pVtx[0].pos = D3DXVECTOR3(0.0f, 0.0f, 0.0f);
	//pVtx[1].pos = D3DXVECTOR3(1280.0f, 0.0f, 0.0f);
	//pVtx[2].pos = D3DXVECTOR3(0.0f, 720.0f, 0.0f);
	//pVtx[3].pos = D3DXVECTOR3(1280.0f, 720.0f, 0.0f);

	//// rhwの設定
	//pVtx[0].rhw = 1.0f;
	//pVtx[1].rhw = 1.0f;
	//pVtx[2].rhw = 1.0f;
	//pVtx[3].rhw = 1.0f;

	//// 頂点カラーの設定
	//pVtx[0].col = D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f);
	//pVtx[1].col = D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f);
	//pVtx[2].col = D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f);
	//pVtx[3].col = D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f);

	//// テクスチャ設定
	//pVtx[0].tex = D3DXVECTOR2(0.0f, 0.0f);
	//pVtx[1].tex = D3DXVECTOR2(1.0f, 0.0f);
	//pVtx[2].tex = D3DXVECTOR2(0.0f, 1.0f);
	//pVtx[3].tex = D3DXVECTOR2(1.0f, 1.0f);

	////アンロック
	//g_pVtxBuffResult->Unlock();

}
//==============================================================================================================
// アイテムのゲージの終了処理
//==============================================================================================================
void UninitItemGage(void)
{

}
//==============================================================================================================
// アイテムのゲージの更新処理
//==============================================================================================================
void UpdateItemGage(void)
{

}
//==============================================================================================================
// アイテムのゲージの描画処理
//==============================================================================================================
void DrawItemGage(void)
{

}
